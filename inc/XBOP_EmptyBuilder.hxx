// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XBOP_EmptyBuilder_HeaderFile
#define _XBOP_EmptyBuilder_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _XBOP_Builder_HeaderFile
#include <XBOP_Builder.hxx>
#endif
class XBOPTools_DSFiller;



//!        Performs Boolean Operation (BO) for shapes <br>
//!        in cases when one of arguments(or both) is(are) empty <br>
class XBOP_EmptyBuilder  : public XBOP_Builder {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
//! Empty constructor; <br>
  Standard_EXPORT   XBOP_EmptyBuilder();
  
//! see base classes, please <br>
  Standard_EXPORT   virtual  void Do() ;
  
//! see base classes, please <br>
  Standard_EXPORT   virtual  void DoWithFiller(const XBOPTools_DSFiller& aDSF) ;
  
//! Destructor <br>
  Standard_EXPORT   virtual  void Destroy() ;
Standard_EXPORT virtual ~XBOP_EmptyBuilder(){Destroy();}
  
//! see base classes, please <br>
  Standard_EXPORT   virtual  void BuildResult() ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
