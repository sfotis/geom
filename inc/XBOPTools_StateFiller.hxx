// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XBOPTools_StateFiller_HeaderFile
#define _XBOPTools_StateFiller_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _XBOPTools_PPaveFiller_HeaderFile
#include <XBOPTools_PPaveFiller.hxx>
#endif
#ifndef _XBooleanOperations_PShapesDataStructure_HeaderFile
#include <XBooleanOperations_PShapesDataStructure.hxx>
#endif
#ifndef _XBOPTools_PInterferencePool_HeaderFile
#include <XBOPTools_PInterferencePool.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _XBooleanOperations_StateOfShape_HeaderFile
#include <XBooleanOperations_StateOfShape.hxx>
#endif
#ifndef _TopAbs_State_HeaderFile
#include <TopAbs_State.hxx>
#endif
#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
class XBOPTools_PaveFiller;
class TopoDS_Edge;
class TopoDS_Shape;



//!  root class to compute states (3D) <br>
class XBOPTools_StateFiller  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
//! Constructor <br>
  Standard_EXPORT   XBOPTools_StateFiller(const XBOPTools_PaveFiller& aFiller);
  
//! Launch the Filler <br>
  Standard_EXPORT   virtual  void Do() ;
  
//! Returns true if Ok <br>
  Standard_EXPORT     Standard_Boolean IsDone() const;
  
//! Convert conventional states to VDS-states <br>
  Standard_EXPORT   static  XBooleanOperations_StateOfShape ConvertState(const TopAbs_State aSt) ;
  
//! Convert VDS-states to conventional states <br>
  Standard_EXPORT   static  TopAbs_State ConvertState(const XBooleanOperations_StateOfShape aSt) ;
  
//! Computation the 3D-state of the edge <anEdge> <br>
//! to solid  <aRef> <br>
  Standard_EXPORT     TopAbs_State ClassifyEdgeToSolidByOnePoint(const TopoDS_Edge& anEdge,const TopoDS_Shape& aRef) ;
  
//! Computation the 3D-state of the shape <aShape> <br>
//! to solid <aRef> <br>
  Standard_EXPORT     XBooleanOperations_StateOfShape ClassifyShapeByRef(const TopoDS_Shape& aShape,const TopoDS_Shape& aRef) ;
  
//! Returns first subtype of <Shape> <br>
  Standard_EXPORT   static  TopAbs_ShapeEnum SubType(const TopoDS_Shape& aShape) ;





protected:



XBOPTools_PPaveFiller myFiller;
XBooleanOperations_PShapesDataStructure myDS;
XBOPTools_PInterferencePool myIntrPool;
Standard_Boolean myIsDone;


private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
