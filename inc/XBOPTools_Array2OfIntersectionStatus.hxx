// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XBOPTools_Array2OfIntersectionStatus_HeaderFile
#define _XBOPTools_Array2OfIntersectionStatus_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _XBOPTools_IntersectionStatus_HeaderFile
#include <XBOPTools_IntersectionStatus.hxx>
#endif
class Standard_RangeError;
class Standard_OutOfRange;
class Standard_OutOfMemory;
class Standard_DimensionMismatch;



class XBOPTools_Array2OfIntersectionStatus  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   XBOPTools_Array2OfIntersectionStatus(const Standard_Integer R1,const Standard_Integer R2,const Standard_Integer C1,const Standard_Integer C2);
  
  Standard_EXPORT   XBOPTools_Array2OfIntersectionStatus(const XBOPTools_IntersectionStatus& Item,const Standard_Integer R1,const Standard_Integer R2,const Standard_Integer C1,const Standard_Integer C2);
  
  Standard_EXPORT     void Init(const XBOPTools_IntersectionStatus& V) ;
  
  Standard_EXPORT     void Destroy() ;
~XBOPTools_Array2OfIntersectionStatus()
{
  Destroy();
}
  
  Standard_EXPORT    const XBOPTools_Array2OfIntersectionStatus& Assign(const XBOPTools_Array2OfIntersectionStatus& Other) ;
   const XBOPTools_Array2OfIntersectionStatus& operator =(const XBOPTools_Array2OfIntersectionStatus& Other) 
{
  return Assign(Other);
}
  
        Standard_Integer ColLength() const;
  
        Standard_Integer RowLength() const;
  
        Standard_Integer LowerCol() const;
  
        Standard_Integer LowerRow() const;
  
        Standard_Integer UpperCol() const;
  
        Standard_Integer UpperRow() const;
  
        void SetValue(const Standard_Integer Row,const Standard_Integer Col,const XBOPTools_IntersectionStatus& Value) ;
  
       const XBOPTools_IntersectionStatus& Value(const Standard_Integer Row,const Standard_Integer Col) const;
     const XBOPTools_IntersectionStatus& operator()(const Standard_Integer Row,const Standard_Integer Col) const
{
  return Value(Row,Col);
}
  
        XBOPTools_IntersectionStatus& ChangeValue(const Standard_Integer Row,const Standard_Integer Col) ;
      XBOPTools_IntersectionStatus& operator()(const Standard_Integer Row,const Standard_Integer Col) 
{
  return ChangeValue(Row,Col);
}





protected:





private:

  
  Standard_EXPORT   XBOPTools_Array2OfIntersectionStatus(const XBOPTools_Array2OfIntersectionStatus& AnArray);
  
  Standard_EXPORT     void Allocate() ;


Standard_Integer myLowerRow;
Standard_Integer myLowerColumn;
Standard_Integer myUpperRow;
Standard_Integer myUpperColumn;
Standard_Boolean myDeletable;
Standard_Address myData;


};

#define Array2Item XBOPTools_IntersectionStatus
#define Array2Item_hxx <XBOPTools_IntersectionStatus.hxx>
#define TCollection_Array2 XBOPTools_Array2OfIntersectionStatus
#define TCollection_Array2_hxx <XBOPTools_Array2OfIntersectionStatus.hxx>

#include <TCollection_Array2.lxx>

#undef Array2Item
#undef Array2Item_hxx
#undef TCollection_Array2
#undef TCollection_Array2_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
