// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XBOPTools_ListOfShapeEnum_HeaderFile
#define _XBOPTools_ListOfShapeEnum_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
#ifndef _Handle_XBOPTools_ListNodeOfListOfShapeEnum_HeaderFile
#include <Handle_XBOPTools_ListNodeOfListOfShapeEnum.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class XBOPTools_ListIteratorOfListOfShapeEnum;
class XBOPTools_ListNodeOfListOfShapeEnum;



class XBOPTools_ListOfShapeEnum  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   XBOPTools_ListOfShapeEnum();
  
  Standard_EXPORT     void Assign(const XBOPTools_ListOfShapeEnum& Other) ;
    void operator=(const XBOPTools_ListOfShapeEnum& Other) 
{
  Assign(Other);
}
  
  Standard_EXPORT     Standard_Integer Extent() const;
  
  Standard_EXPORT     void Clear() ;
~XBOPTools_ListOfShapeEnum()
{
  Clear();
}
  
        Standard_Boolean IsEmpty() const;
  
  Standard_EXPORT     void Prepend(const TopAbs_ShapeEnum& I) ;
  
  Standard_EXPORT     void Prepend(const TopAbs_ShapeEnum& I,XBOPTools_ListIteratorOfListOfShapeEnum& theIt) ;
  
  Standard_EXPORT     void Prepend(XBOPTools_ListOfShapeEnum& Other) ;
  
  Standard_EXPORT     void Append(const TopAbs_ShapeEnum& I) ;
  
  Standard_EXPORT     void Append(const TopAbs_ShapeEnum& I,XBOPTools_ListIteratorOfListOfShapeEnum& theIt) ;
  
  Standard_EXPORT     void Append(XBOPTools_ListOfShapeEnum& Other) ;
  
  Standard_EXPORT     TopAbs_ShapeEnum& First() const;
  
  Standard_EXPORT     TopAbs_ShapeEnum& Last() const;
  
  Standard_EXPORT     void RemoveFirst() ;
  
  Standard_EXPORT     void Remove(XBOPTools_ListIteratorOfListOfShapeEnum& It) ;
  
  Standard_EXPORT     void InsertBefore(const TopAbs_ShapeEnum& I,XBOPTools_ListIteratorOfListOfShapeEnum& It) ;
  
  Standard_EXPORT     void InsertBefore(XBOPTools_ListOfShapeEnum& Other,XBOPTools_ListIteratorOfListOfShapeEnum& It) ;
  
  Standard_EXPORT     void InsertAfter(const TopAbs_ShapeEnum& I,XBOPTools_ListIteratorOfListOfShapeEnum& It) ;
  
  Standard_EXPORT     void InsertAfter(XBOPTools_ListOfShapeEnum& Other,XBOPTools_ListIteratorOfListOfShapeEnum& It) ;


friend class XBOPTools_ListIteratorOfListOfShapeEnum;



protected:





private:

  
  Standard_EXPORT   XBOPTools_ListOfShapeEnum(const XBOPTools_ListOfShapeEnum& Other);


Standard_Address myFirst;
Standard_Address myLast;


};

#define Item TopAbs_ShapeEnum
#define Item_hxx <TopAbs_ShapeEnum.hxx>
#define TCollection_ListNode XBOPTools_ListNodeOfListOfShapeEnum
#define TCollection_ListNode_hxx <XBOPTools_ListNodeOfListOfShapeEnum.hxx>
#define TCollection_ListIterator XBOPTools_ListIteratorOfListOfShapeEnum
#define TCollection_ListIterator_hxx <XBOPTools_ListIteratorOfListOfShapeEnum.hxx>
#define Handle_TCollection_ListNode Handle_XBOPTools_ListNodeOfListOfShapeEnum
#define TCollection_ListNode_Type_() XBOPTools_ListNodeOfListOfShapeEnum_Type_()
#define TCollection_List XBOPTools_ListOfShapeEnum
#define TCollection_List_hxx <XBOPTools_ListOfShapeEnum.hxx>

#include <TCollection_List.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_ListNode
#undef TCollection_ListNode_hxx
#undef TCollection_ListIterator
#undef TCollection_ListIterator_hxx
#undef Handle_TCollection_ListNode
#undef TCollection_ListNode_Type_
#undef TCollection_List
#undef TCollection_List_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
