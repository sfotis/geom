// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _XIntTools_ListOfBox_HeaderFile
#define _XIntTools_ListOfBox_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Handle_XIntTools_ListNodeOfListOfBox_HeaderFile
#include <Handle_XIntTools_ListNodeOfListOfBox.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class XIntTools_ListIteratorOfListOfBox;
class Bnd_Box;
class XIntTools_ListNodeOfListOfBox;



class XIntTools_ListOfBox  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   XIntTools_ListOfBox();
  
  Standard_EXPORT     void Assign(const XIntTools_ListOfBox& Other) ;
    void operator=(const XIntTools_ListOfBox& Other) 
{
  Assign(Other);
}
  
  Standard_EXPORT     Standard_Integer Extent() const;
  
  Standard_EXPORT     void Clear() ;
~XIntTools_ListOfBox()
{
  Clear();
}
  
        Standard_Boolean IsEmpty() const;
  
  Standard_EXPORT     void Prepend(const Bnd_Box& I) ;
  
  Standard_EXPORT     void Prepend(const Bnd_Box& I,XIntTools_ListIteratorOfListOfBox& theIt) ;
  
  Standard_EXPORT     void Prepend(XIntTools_ListOfBox& Other) ;
  
  Standard_EXPORT     void Append(const Bnd_Box& I) ;
  
  Standard_EXPORT     void Append(const Bnd_Box& I,XIntTools_ListIteratorOfListOfBox& theIt) ;
  
  Standard_EXPORT     void Append(XIntTools_ListOfBox& Other) ;
  
  Standard_EXPORT     Bnd_Box& First() const;
  
  Standard_EXPORT     Bnd_Box& Last() const;
  
  Standard_EXPORT     void RemoveFirst() ;
  
  Standard_EXPORT     void Remove(XIntTools_ListIteratorOfListOfBox& It) ;
  
  Standard_EXPORT     void InsertBefore(const Bnd_Box& I,XIntTools_ListIteratorOfListOfBox& It) ;
  
  Standard_EXPORT     void InsertBefore(XIntTools_ListOfBox& Other,XIntTools_ListIteratorOfListOfBox& It) ;
  
  Standard_EXPORT     void InsertAfter(const Bnd_Box& I,XIntTools_ListIteratorOfListOfBox& It) ;
  
  Standard_EXPORT     void InsertAfter(XIntTools_ListOfBox& Other,XIntTools_ListIteratorOfListOfBox& It) ;


friend class XIntTools_ListIteratorOfListOfBox;



protected:





private:

  
  Standard_EXPORT   XIntTools_ListOfBox(const XIntTools_ListOfBox& Other);


Standard_Address myFirst;
Standard_Address myLast;


};

#define Item Bnd_Box
#define Item_hxx <Bnd_Box.hxx>
#define TCollection_ListNode XIntTools_ListNodeOfListOfBox
#define TCollection_ListNode_hxx <XIntTools_ListNodeOfListOfBox.hxx>
#define TCollection_ListIterator XIntTools_ListIteratorOfListOfBox
#define TCollection_ListIterator_hxx <XIntTools_ListIteratorOfListOfBox.hxx>
#define Handle_TCollection_ListNode Handle_XIntTools_ListNodeOfListOfBox
#define TCollection_ListNode_Type_() XIntTools_ListNodeOfListOfBox_Type_()
#define TCollection_List XIntTools_ListOfBox
#define TCollection_List_hxx <XIntTools_ListOfBox.hxx>

#include <TCollection_List.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_ListNode
#undef TCollection_ListNode_hxx
#undef TCollection_ListIterator
#undef TCollection_ListIterator_hxx
#undef Handle_TCollection_ListNode
#undef TCollection_ListNode_Type_
#undef TCollection_List
#undef TCollection_List_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
